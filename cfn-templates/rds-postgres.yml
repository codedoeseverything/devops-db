
AWSTemplateFormatVersion: '2010-09-09'
Description: This is RDS PostgresSQL cloudformation template for core Practera DB infrastructure
  design

Metadata:
  Authors:
    Description: Sunil and Mihai (sunil@practera.com/mihai@practera.com) based on
      AWS quickstart/widdix and best practise.
  License:
    Description: Copyright 2020 Intersective PTY LTD and its affiliates. All Rights
      Reserved.

Parameters:
  StackName:
    ConstraintDescription: This will be unique string to represent our stack.
    Default: beta
    Description: A client/project/product unique name for the stack to idnetify later.
      This string can include numbers, lowercase letters, uppercase letters, and hyphens
      (-). It cannot start or end with a hyphen (-).
    Type: String
    AllowedValues: [au,us,uk,p2,lf,nu,alpha,beta,shared]
  Env:
    Description: Environment type.
    Default: stage
    Type: String
    AllowedValues:
      - sandbox
      - stage
      - live
    ConstraintDescription: must specify sandbox,stage,live.
  DBSnapshotIdentifier:
    Description: 'Optional name or Amazon Resource Name (ARN) of the DB snapshot from which you want to restore (leave blank to create an empty database).'
    Type: String
    Default: ''
  DBAllocatedStorage:
    Description: 'The allocated storage size, specified in GB (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 16384
  DBInstanceClass:
    Description: 'The instance type of database server.'
    Type: String
    Default: 'db.t2.micro'
  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the database.'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 30
  DBMultiAZ:
    Description: 'Specifies if the database instance is deployed to multiple Availability Zones for HA.'
    Type: String
    Default: true
    AllowedValues: [true, false]
  DBOptionGroupName:
    Description: 'Optional name of an existing DB option group.'
    Type: String
    Default: ''
  DBParameterGroupName:
    Description: 'Optional name of an existing DB parameter group.'
    Type: String
    Default: ''
  SubDomainNameWithDot:
    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ยง{SubDomainNameWithDot}ยง{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'
    Type: String
    Default: 'postgres.'
  PreferredBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '09:54-10:24'
  PreferredMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  EngineVersion:
    Description: 'PostgreSQL version.'
    Type: String
    Default: '9.6.5'
    AllowedValues: ['9.5.2', '9.5.4', '9.5.6', '9.5.7', '9.5.9', '9.5.10', '9.5.12', '9.5.13', '9.5.14', '9.5.15', '9.5.16', '9.5.18', '9.5.19', '9.5.20', '9.5.21', '9.5.22', '9.5.23', '9.6.1', '9.6.2', '9.6.3', '9.6.5', '9.6.6', '9.6.8', '9.6.9', '9.6.10', '9.6.11', '9.6.12', '9.6.14', '9.6.15', '9.6.16', '9.6.17', '9.6.18', '9.6.19', '10.1', '10.3', '10.4', '10.5', '10.6', '10.7', '10.9', '10.10', '10.11', '10.12', '10.13', '10.14', '11.1', '11.2', '11.4', '11.5', '11.6', '11.7', '11.8', '11.9', '12.2', '12.3', '12.4'] # aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"
  EnableIAMDatabaseAuthentication:
    Description: 'Enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html).'
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
  DBSecretARN:
    AllowedPattern: arn:aws:secretsmanager:.*
    ConstraintDescription: Only valid secret manager ARN allowed
    Description: 'The DB secret ARN to retrieve from secret manager'
    Type: String
    NoEcho: true

Conditions:
  HasDBSnapshotIdentifier: !Not [!Equals [!Ref DBSnapshotIdentifier, '']]
  HasDBOptionGroupName: !Not [!Equals [!Ref DBOptionGroupName, '']]
  HasDBParameterGroupName: !Not [!Equals [!Ref DBParameterGroupName, '']]
 
Resources:

  RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: {'Fn::ImportValue': !Sub '${StackName}-PrivateHostedZoneID-${Env}'}
      Name: !Sub
      - '${SubDomainNameWithDot}${HostedZoneName}'
      - SubDomainNameWithDot: !Ref SubDomainNameWithDot
        HostedZoneName: {'Fn::ImportValue': !Sub '${StackName}-PrivateHostedZoneName-${Env}'}
      ResourceRecords:
      - !GetAtt 'DBInstance.Endpoint.Address'
      TTL: 60
      Type: CNAME
  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: !Sub '${StackName}-RDSPostgresDBSubnetGroup-${Env}'
      SubnetIds: !Split
        - ','
        - 'Fn::ImportValue': !Sub '${StackName}-SubnetsPrivate-${Env}'
  DBInstance:
    DeletionPolicy: Snapshot # default
    UpdateReplacePolicy: Snapshot
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: !If [HasDBSnapshotIdentifier, !Ref 'AWS::NoValue', !Ref DBAllocatedStorage]
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBName: !If [HasDBSnapshotIdentifier, !Ref 'AWS::NoValue', !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretARN, ':SecretString:dbname}}' ]]]
      DBParameterGroupName: !If [HasDBParameterGroupName, !Ref DBParameterGroupName, !Ref 'AWS::NoValue']
      DBSnapshotIdentifier: !If [HasDBSnapshotIdentifier, !Ref DBSnapshotIdentifier, !Ref 'AWS::NoValue']
      DBSubnetGroupName: !Ref DBSubnetGroup
      EnableIAMDatabaseAuthentication: !Ref EnableIAMDatabaseAuthentication
      Engine: postgres
      EngineVersion: !If [HasDBSnapshotIdentifier, !Ref 'AWS::NoValue', !Ref EngineVersion]
      MasterUsername: !If [HasDBSnapshotIdentifier, !Ref 'AWS::NoValue', !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretARN, ':SecretString:username}}' ]]]
      MasterUserPassword: !If [HasDBSnapshotIdentifier, !Ref 'AWS::NoValue', !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretARN, ':SecretString:password}}' ]]]
      MultiAZ: !Ref DBMultiAZ
      OptionGroupName: !If [HasDBOptionGroupName, !Ref DBOptionGroupName, !Ref 'AWS::NoValue']
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      StorageType: gp2
      StorageEncrypted: true
      PubliclyAccessible: false
      VPCSecurityGroups:
      - {'Fn::ImportValue': !Sub '${StackName}-DBClientSecurityGroup-${Env}'}
      - {'Fn::ImportValue': !Sub '${StackName}-DBServerSecurityGroup-${Env}'}

  DatabaseBurstBalanceTooLowAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database storage burst balance over last 10 minutes too low, expect a significant performance drop soon.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: BurstBalance
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 20

  DatabaseCPUUtilizationTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database CPU utilization over last 10 minutes too high.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: CPUUtilization
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 80

  DatabaseCPUCreditBalanceTooLowAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database CPU credit balance over last 10 minutes too low, expect a significant performance drop soon.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: CPUCreditBalance
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 20

  DatabaseDiskQueueDepthTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database disk queue depth over last 10 minutes too high, performance may suffer.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: DiskQueueDepth
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 64

  DatabaseFreeableMemoryTooLowAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database freeable memory over last 10 minutes too low, performance may suffer.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: FreeableMemory
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 64000000 # 64 Megabyte in Byte

  DatabaseFreeStorageSpaceTooLowAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database free storage space over last 10 minutes too low.'
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: FreeStorageSpace
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 2000000000 # 2 Gigabyte in Byte

  DatabaseSwapUsageTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      AlarmDescription: 'Average database swap usage over last 10 minutes too high, performance may suffer.'
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: SwapUsage
      Namespace: 'AWS/RDS'
      OKActions:
      - {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      Period: 600
      Statistic: Average
      Threshold: 256000000 # 256 Megabyte in Byte

  DatabaseEventSubscription:
    Type: 'AWS::RDS::EventSubscription'
    Properties:
      EventCategories:
      - failover
      - failure
      - 'low storage'
      - maintenance
      - 'read replica'
      - recovery
      SnsTopicArn: {'Fn::ImportValue': !Sub '${StackName}-ChatBotSNSTopicARN-${Env}'}
      SourceIds: [!Ref DBInstance]
      SourceType: 'db-instance'

Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  DBNAME:
    Description: 'The name of the database instance.'
    Value: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecretARN, ':SecretString:dbname}}' ]]
    Export: 
      Name: !Sub '${StackName}-DBNAME-${Env}'
  RDSInstanceName:
    Description: 'The name of the database instance.'
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${StackName}-RDSInstanceName-${Env}'
  RDSDNSName:
    Description: 'The connection endpoint for the database.'
    Value: !GetAtt 'DBInstance.Endpoint.Address'
    Export:
      Name: !Sub '${StackName}-RDSDNSName-${Env}'
  Route53RecordRDS:
    Description: 'The connection endpoint for the DB cluster via Route53 record.'
    Value: !Ref 'RecordSet'
    Export:
      Name: !Sub '${StackName}-Route53DBEndpoint-${Env}'